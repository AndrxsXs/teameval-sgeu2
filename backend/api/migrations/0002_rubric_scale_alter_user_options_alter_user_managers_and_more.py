# Generated by Django 5.0.4 on 2024-05-05 00:20

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rubric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Upper_limit', models.IntegerField()),
                ('Lower_limit', models.IntegerField()),
            ],
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RenameField(
            model_name='user',
            old_name='rol',
            new_name='role',
        ),
        migrations.RemoveField(
            model_name='admi',
            name='id',
        ),
        migrations.RemoveField(
            model_name='admi',
            name='phone',
        ),
        migrations.RemoveField(
            model_name='admi',
            name='status',
        ),
        migrations.RemoveField(
            model_name='student',
            name='id',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='id',
        ),
        migrations.AddField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='user',
            name='first_login',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='admi',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='teacher',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='user',
            name='code',
            field=models.CharField(max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=80),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('code', models.CharField(max_length=40)),
                ('academic_period', models.CharField(max_length=10)),
                ('student_status', models.IntegerField(choices=[(1, 'Habilitado'), (2, 'Deshabilitado')])),
                ('course_status', models.IntegerField(choices=[(1, 'Habilitado'), (2, 'Deshabilitado')])),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='courses_enrolled', to='api.student')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='courses_taught', to='api.teacher')),
                ('user_student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='courses_user_student', to='api.student')),
                ('user_teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='courses_user_teacher', to='api.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('Assigned_project', models.TextField()),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='groups', to='api.course')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reports', to='api.course')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluator', models.CharField(max_length=60)),
                ('evaluated', models.CharField(max_length=60)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaluations_student', to='api.student')),
                ('user_student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaluations_user', to='api.student')),
                ('report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evaluations', to='api.report')),
            ],
        ),
        migrations.CreateModel(
            name='Resourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=50)),
                ('Acces_route', models.TextField()),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='resourses', to='api.course')),
            ],
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('rubric', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='standards', to='api.rubric')),
            ],
        ),
        migrations.AddField(
            model_name='rubric',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rubrics', to='api.course'),
        ),
        migrations.AddField(
            model_name='rubric',
            name='scale',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rubrics', to='api.scale'),
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('standard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='descriptions', to='api.standard')),
                ('scale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='descriptions', to='api.scale')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('average', models.DecimalField(decimal_places=3, max_digits=10)),
                ('standard', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='api.standard')),
                ('evaluation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rating', to='api.evaluation')),
            ],
        ),
    ]
